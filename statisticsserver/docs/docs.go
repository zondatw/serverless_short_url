// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "API Support",
            "url": "https://github.com/zondatw/serverless_short_url"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/shorturl/": {
            "get": {
                "description": "Get all short url",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "shorturl"
                ],
                "summary": "Get all short url",
                "parameters": [
                    {
                        "type": "integer",
                        "example": 5,
                        "description": "length per page",
                        "name": "length",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "0",
                        "description": "start of page",
                        "name": "start",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/shorturl.ShortUrlPaginate"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/shorturl.ErrorMsg"
                        }
                    }
                }
            }
        },
        "/api/shorturl/{hash}": {
            "get": {
                "description": "Get short url detail",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "shorturl"
                ],
                "summary": "Get short url detail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "hash",
                        "name": "hash",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/shorturl.ShortUrlDetail"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/shorturl.ErrorMsg"
                        }
                    }
                }
            }
        },
        "/api/shorturlreport/daily/{hash}": {
            "get": {
                "description": "Get daily report",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "shorturlreport"
                ],
                "summary": "Get daily report",
                "parameters": [
                    {
                        "type": "string",
                        "description": "hash",
                        "name": "hash",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "example": 6,
                        "description": "month of search",
                        "name": "month",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 2021,
                        "description": "year of search",
                        "name": "year",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/shorturl.shortUrlReport"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/shorturl.ErrorMsg"
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Base"
                ],
                "summary": "Health",
                "responses": {
                    "200": {
                        "description": "{\"status\": \"OK\"}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "shorturl.ErrorMsg": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Error Message"
                }
            }
        },
        "shorturl.ShortUrl": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string",
                    "example": "2021-06-26T13:14:47.15739Z"
                },
                "hash": {
                    "type": "string",
                    "example": "XXXXXX"
                },
                "target": {
                    "type": "string",
                    "example": "http://localhost/"
                },
                "type": {
                    "type": "string",
                    "example": "url"
                }
            }
        },
        "shorturl.ShortUrlDailyReport": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer",
                    "example": 30
                },
                "date": {
                    "type": "string",
                    "example": "2021-6-30"
                },
                "hash": {
                    "type": "string",
                    "example": "XXXXXX"
                }
            }
        },
        "shorturl.ShortUrlDetail": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer",
                    "example": 30
                },
                "createdAt": {
                    "type": "string",
                    "example": "2021-06-26T13:14:47.15739Z"
                },
                "owner": {
                    "type": "string",
                    "example": "test@test.org"
                },
                "target": {
                    "type": "string",
                    "example": "http://localhost/"
                },
                "type": {
                    "type": "string",
                    "example": "url"
                }
            }
        },
        "shorturl.ShortUrlPaginate": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/shorturl.ShortUrl"
                    }
                },
                "length": {
                    "type": "integer",
                    "example": 5
                },
                "next": {
                    "type": "string",
                    "example": "OOOOOO"
                },
                "start": {
                    "type": "string",
                    "example": "0"
                }
            }
        },
        "shorturl.shortUrlReport": {
            "type": "object",
            "properties": {
                "dates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/shorturl.ShortUrlDailyReport"
                    }
                },
                "month": {
                    "type": "integer",
                    "example": 6
                },
                "year": {
                    "type": "integer",
                    "example": 2021
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "localhost",
	BasePath:    "",
	Schemes:     []string{},
	Title:       "Swagger API",
	Description: "Gin swagger.",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
